{"version":3,"file":"index.js","mappings":"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","sources":["webpack:///./node_modules/lodash.debounce/index.js","webpack:///./node_modules/lodash.once/index.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///./src/index.js","webpack:///../selectRandomUniform.js","webpack:///../randomInteger.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = once;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import debounce from 'lodash.debounce'\nimport once from 'lodash.once'\nimport { selectRandomUniform } from '../../selectRandomUniform.js'\n\nconst CIRCLE_MARGIN = 4 // 0.25rem with 1rem = 16px\nconst SPACE_BETWEEN_CIRCLES = 2 * CIRCLE_MARGIN\nconst CIRCLE_LENGTH = 32 // 2rem with 1rem = 16px\nconst CIRCLE_WIDTH = CIRCLE_LENGTH\nconst CIRCLE_HEIGHT = CIRCLE_LENGTH\nconst CIRCLE_BORDER = 1 // px\nconst MAXIMUM_MOVE_DISTANCE = CIRCLE_LENGTH + 2 * CIRCLE_BORDER + SPACE_BETWEEN_CIRCLES\nconst DISTANCE_THRESHOLD = 0.5 * (CIRCLE_LENGTH + 2 * CIRCLE_BORDER + SPACE_BETWEEN_CIRCLES) // px\nconst MINIMUM_AMOUNT_OF_CIRCLES_ON_SAME_LINE_FOR_REMOVAL = 3\n\nexport function main() {\n  const numberOfRows = 20\n  const numberOfColumns = 20\n  const colors = ['red', 'green', 'yellow', 'blue']\n  const circleGrid = document.querySelector('.circle-grid')\n  spawnCircles(circleGrid, { rows: numberOfRows, columns: numberOfColumns, colors })\n\n  const connectionLineCanvas = document.querySelector('.connection-line-canvas')\n  connectionLineCanvas.width = circleGrid.clientWidth\n  connectionLineCanvas.height = circleGrid.clientHeight\n  const context = connectionLineCanvas.getContext('2d')\n\n  let selectedCircles = new Set()\n  let firstSelectedCircle = null\n  let selectedColor = null\n  let lastSelectedCircle = null\n  let selectedCircleOffset = null\n  let lastCircleThatTheSelectedCircleWasMovingTowards = null\n  let isSwappingEnabled = false\n\n  function enableSwapping() {\n    isSwappingEnabled = true\n    document.body.classList.add('swapping-enabled')\n  }\n\n  function disableSwapping() {\n    isSwappingEnabled = false\n    document.body.classList.remove('swapping-enabled')\n  }\n\n  enableSwapping()\n\n  function isSelectingCircles() {\n    return lastSelectedCircle !== null\n  }\n\n  circleGrid.addEventListener('pointerdown', function (event) {\n    if (isSwappingEnabled) {\n      const target = event.target\n      if (target.classList.contains('circle')) {\n        event.preventDefault()\n        const circle = target\n        selectedCircles.add(circle)\n        firstSelectedCircle = circle\n        selectedColor = determineCircleColor(firstSelectedCircle)\n        lastSelectedCircle = circle\n        selectedCircleOffset = {\n          x: 0,\n          y: 0,\n        }\n        firstSelectedCircle.classList.add('circle--dragged')\n        updateCircleOffsets()\n      }\n    }\n  })\n\n  circleGrid.addEventListener('pointermove', function (event) {\n    if (isSelectingCircles()) {\n      const target = event.target\n      if (target.classList.contains('circle')) {\n        const circle = target\n        const circleColor = determineCircleColor(circle)\n        if (\n          circleColor === selectedColor &&\n          (!selectedCircles.has(circle) || (selectedCircles.size >= 3 && circle === firstSelectedCircle)) &&\n          canBeConnected(circle, lastSelectedCircle)\n        ) {\n          drawConnectionLine(circle, lastSelectedCircle)\n          selectedCircles.add(circle)\n          lastSelectedCircle = circle\n        }\n      }\n      selectedCircleOffset = {\n        x: selectedCircleOffset.x + event.movementX,\n        y: selectedCircleOffset.y + event.movementY,\n      }\n      updateCircleOffsets()\n    }\n  })\n\n  window.addEventListener('pointerup', function () {\n    if (isSelectingCircles()) {\n      if (selectedCircles.size >= 2) {\n        if (hasSquareBeenSelected(selectedCircles, numberOfColumns)) {\n          const circles = circleGrid.querySelectorAll('.circle')\n          for (const circle of circles) {\n            if (determineCircleColor(circle) === selectedColor) {\n              removeCircle(circle)\n            }\n          }\n        } else {\n          selectedCircles.forEach(removeCircle)\n        }\n      }\n\n      if (lastCircleThatTheSelectedCircleWasMovingTowards) {\n        const { x: offsetX, y: offsetY } = determineSelectedCircleOffset()\n        const distanceMoved = Math.abs(offsetX + offsetY)\n        if (distanceMoved > DISTANCE_THRESHOLD) {\n          swapCircles(firstSelectedCircle, lastCircleThatTheSelectedCircleWasMovingTowards)\n\n          let circlesToRemove = new Set()\n          for (const circle of new Set([firstSelectedCircle, lastCircleThatTheSelectedCircleWasMovingTowards])) {\n            let circlesToRemovePart = new Set()\n            const color = determineCircleColor(circle)\n            const startPosition = determinePosition(circle)\n            const horizontalOffsets = new Set([\n              { row: 0, column: -1 },\n              { row: 0, column: 1 },\n            ])\n            const verticalOffsets = new Set([\n              { row: -1, column: 0 },\n              { row: 1, column: 0 },\n            ])\n            const offsetSets = new Set([horizontalOffsets, verticalOffsets])\n            for (const offsetSet of offsetSets) {\n              let circlesWithSameColor = new Set()\n              for (const offset of offsetSet) {\n                circlesWithSameColor = union(\n                  circlesWithSameColor,\n                  determineCirclesWithSameColorInDirection(color, startPosition, offset)\n                )\n              }\n              if (circlesWithSameColor.size >= MINIMUM_AMOUNT_OF_CIRCLES_ON_SAME_LINE_FOR_REMOVAL - 1) {\n                circlesToRemovePart = union(circlesToRemovePart, circlesWithSameColor)\n              }\n            }\n            if (circlesToRemovePart.size >= 1) {\n              circlesToRemovePart.add(circle)\n            }\n            circlesToRemove = union(circlesToRemove, circlesToRemovePart)\n          }\n\n          removeCircles(circlesToRemove)\n        }\n      }\n\n      firstSelectedCircle.classList.remove('circle--dragged')\n      removeSelectedCircleOffset()\n      removeLastCircleThatTheSelectedCircleWasMovingTowardsOffset()\n\n      selectedCircles = new Set()\n      firstSelectedCircle = null\n      selectedColor = null\n      lastSelectedCircle = null\n      selectedCircleOffset = null\n      lastCircleThatTheSelectedCircleWasMovingTowards = null\n      context.clearRect(0, 0, connectionLineCanvas.width, connectionLineCanvas.height)\n    }\n  })\n\n  function updateCircleOffsets() {\n    updateSelectedCircleOffset()\n    updateCircleOffsetThatTheSelectedCircleIsMovingTowards()\n  }\n\n  function updateSelectedCircleOffset() {\n    const { x: translateX, y: translateY } = determineSelectedCircleOffset()\n    firstSelectedCircle.style.transform = `translate(${translateX}px, ${translateY}px)`\n  }\n\n  function determineSelectedCircleOffset() {\n    return determineNormalizedCircleOffset(selectedCircleOffset)\n  }\n\n  function determineNormalizedCircleOffset(offset) {\n    const { x, y } = offset\n    const absoluteX = Math.abs(x)\n    const absoluteY = Math.abs(y)\n    const normalizedX = absoluteX > absoluteY ? Math.sign(x) * Math.min(Math.abs(x), MAXIMUM_MOVE_DISTANCE) : 0\n    const normalizedY = absoluteY > absoluteX ? Math.sign(y) * Math.min(Math.abs(y), MAXIMUM_MOVE_DISTANCE) : 0\n    return {\n      x: normalizedX,\n      y: normalizedY,\n    }\n  }\n\n  function updateCircleOffsetThatTheSelectedCircleIsMovingTowards() {\n    const circle = retrieveCircleThatTheSelectedCircleIsMovingTowards()\n    if (lastCircleThatTheSelectedCircleWasMovingTowards && circle !== lastCircleThatTheSelectedCircleWasMovingTowards) {\n      removeLastCircleThatTheSelectedCircleWasMovingTowardsOffset()\n    }\n    if (circle) {\n      const selectedCircleOffset = determineSelectedCircleOffset()\n      const translateX = -selectedCircleOffset.x\n      const translateY = -selectedCircleOffset.y\n      circle.style.transform = `translate(${translateX}px, ${translateY}px)`\n    }\n    lastCircleThatTheSelectedCircleWasMovingTowards = circle\n  }\n\n  function retrieveCircleThatTheSelectedCircleIsMovingTowards() {\n    const { x, y } = selectedCircleOffset\n    if (x !== 0 || y !== 0) {\n      const absoluteX = Math.abs(x)\n      const absoluteY = Math.abs(y)\n      const rowOffset = absoluteY > absoluteX ? (y > 0 ? 1 : -1) : 0\n      const columnOffset = absoluteX > absoluteY ? (x > 0 ? 1 : -1) : 0\n      const offset = {\n        row: rowOffset,\n        column: columnOffset,\n      }\n      const circle = retrieveCircleWithOffsetToOtherCircle(firstSelectedCircle, offset)\n      return circle\n    } else {\n      return null\n    }\n  }\n\n  function removeSelectedCircleOffset() {\n    removeCircleOffset(firstSelectedCircle)\n  }\n\n  function removeLastCircleThatTheSelectedCircleWasMovingTowardsOffset() {\n    if (lastCircleThatTheSelectedCircleWasMovingTowards) {\n      removeCircleOffset(lastCircleThatTheSelectedCircleWasMovingTowards)\n    }\n  }\n\n  function removeConnectedCircles() {\n    let circlesToRemove = new Set()\n    const circles = circleGrid.querySelectorAll('.circle')\n    for (const circle of circles) {\n      const color = determineCircleColor(circle)\n      const startPosition = determinePosition(circle)\n      const offsets = new Set([\n        { row: 0, column: 1 },\n        { row: 1, column: 0 },\n      ])\n      for (const offset of offsets) {\n        const circlesWithSameColorOnLine = determineCirclesWithSameColorInDirectionIncludingTheStartPosition(\n          color,\n          startPosition,\n          offset\n        )\n        if (circlesWithSameColorOnLine.size >= MINIMUM_AMOUNT_OF_CIRCLES_ON_SAME_LINE_FOR_REMOVAL) {\n          circlesToRemove = union(circlesToRemove, circlesWithSameColorOnLine)\n        }\n      }\n    }\n\n    removeCircles(circlesToRemove)\n  }\n\n  function removeCircleOffset(circle) {\n    circle.style.transform = null\n  }\n\n  function removeCircles(circlesToRemove) {\n    if (circlesToRemove.size >= 1) {\n      disableSwapping()\n      let circlesThatFall = new Set()\n      for (const circle of circlesToRemove) {\n        circle.classList.add('circle--hidden')\n      }\n      const circlesThatAreRemovedGroupedByColumn = groupCirclesIntoColumns(circlesToRemove)\n      const maximumFallOffset =\n        Math.max(...Array.from(circlesThatAreRemovedGroupedByColumn).map(column => column.size)) *\n        (CIRCLE_HEIGHT + 2 * CIRCLE_BORDER + SPACE_BETWEEN_CIRCLES)\n      circleGrid.style.top = `${-maximumFallOffset}px`\n      const circlesThatFallGroupedByColumn = new Array(numberOfColumns)\n      for (let columnIndex = 0; columnIndex < circlesThatAreRemovedGroupedByColumn.length; columnIndex++) {\n        const circlesThatAreRemovedInColumn = circlesThatAreRemovedGroupedByColumn[columnIndex]\n        if (circlesThatAreRemovedInColumn.size >= 1) {\n          const circlesThatFallInColumn = determineCirclesThatFallInColumn(columnIndex, circlesThatAreRemovedInColumn)\n          circlesThatFall = union(circlesThatFall, circlesThatFallInColumn)\n\n          const columns = circleGrid.children\n          const column = columns[columnIndex]\n          const numberOfCirclesToAddToColumn = circlesThatAreRemovedInColumn.size\n          for (let i = 1; i <= numberOfCirclesToAddToColumn; i++) {\n            const newCircle = createCircleWithRandomColor(colors)\n            column.appendChild(newCircle)\n            circlesThatFallInColumn.add(newCircle)\n            circlesThatFall.add(newCircle)\n          }\n\n          circlesThatFallGroupedByColumn[columnIndex] = circlesThatFallInColumn\n        } else {\n          circlesThatFallGroupedByColumn[columnIndex] = new Set()\n        }\n      }\n\n      requestAnimationFrame(() => {\n        for (const circle of circlesThatFall) {\n          circle.classList.add('circle--falling')\n        }\n        requestAnimationFrame(() => {\n          const onTransitionEnd = debounce(\n            once(function onTransitionEnd() {\n              circleGrid.style.top = '0px'\n              circleGrid.removeEventListener('transitionend', onTransitionEnd)\n\n              for (const circle of circlesToRemove) {\n                circle.remove()\n              }\n\n              for (const circle of circlesThatFall) {\n                circle.classList.remove('circle--falling')\n                circle.style.top = null\n              }\n\n              requestAnimationFrame(removeConnectedCircles)\n            })\n          )\n          circleGrid.addEventListener('transitionend', onTransitionEnd)\n\n          for (let columnIndex = 0; columnIndex < numberOfColumns; columnIndex++) {\n            const circlesThatFallInColumn = circlesThatFallGroupedByColumn[columnIndex]\n            for (const circleThatFallsInColumn of circlesThatFallInColumn) {\n              const circleThatFallsInColumnRow = determinePosition(circleThatFallsInColumn).row\n              const circlesThatAreRemovedInColumn = circlesThatAreRemovedGroupedByColumn[columnIndex]\n              const numberOfCirclesThatAreRemovedBelowCircle = Array.from(circlesThatAreRemovedInColumn).filter(\n                circle => determinePosition(circle).row > circleThatFallsInColumnRow\n              ).length\n              const fallOffset =\n                numberOfCirclesThatAreRemovedBelowCircle * (CIRCLE_HEIGHT + 2 * CIRCLE_BORDER + SPACE_BETWEEN_CIRCLES)\n              circleThatFallsInColumn.style.top = `${fallOffset}px`\n            }\n          }\n        })\n      })\n    } else {\n      enableSwapping()\n    }\n  }\n\n  function groupCirclesIntoColumns(circles) {\n    const columns = new Array(numberOfColumns)\n    for (let index = 0; index < columns.length; index++) {\n      columns[index] = new Set()\n    }\n    for (const circle of circles) {\n      const { column } = determinePosition(circle)\n      columns[column].add(circle)\n    }\n    return columns\n  }\n\n  function determineCirclesThatFallInColumn(column, circlesThatAreRemovedInColumn) {\n    const circlesThatFall = new Set()\n    let biggestRowOfCirclesThatFall = Math.max(\n      ...Array.from(circlesThatAreRemovedInColumn).map(circle => determinePosition(circle).row)\n    )\n    let row = 0\n    while (row < biggestRowOfCirclesThatFall) {\n      const circle = retrieveCircleAtPosition({\n        row,\n        column,\n      })\n      if (circle && !circlesThatAreRemovedInColumn.has(circle)) {\n        circlesThatFall.add(circle)\n      }\n      row++\n    }\n    return circlesThatFall\n  }\n\n  function removeCircle(circle) {\n    const column = circle.parentElement\n    circle.remove()\n    const newCircle = createCircleWithRandomColor(colors)\n    column.appendChild(newCircle)\n  }\n\n  function drawConnectionLine(circleA, circleB) {\n    context.beginPath()\n    const { x: x1, y: y1 } = calculateElementCenter(circleA)\n    context.moveTo(x1, y1)\n    const { x: x2, y: y2 } = calculateElementCenter(circleB)\n    context.lineTo(x2, y2)\n    context.stroke()\n  }\n\n  function retrieveCircleWithOffsetToOtherCircle(otherCircle, offset) {\n    const otherCirclePosition = determinePosition(otherCircle)\n    const circlePosition = {\n      row: otherCirclePosition.row + offset.row,\n      column: otherCirclePosition.column + offset.column,\n    }\n    const circle = retrieveCircleAtPosition(circlePosition)\n    return circle\n  }\n\n  function retrieveCircleAtPosition(position) {\n    const { row, column } = position\n    if (row >= 0 && row < numberOfRows && column >= 0 && column < numberOfColumns) {\n      const allCirclesColumns = circleGrid.querySelectorAll('.circles-column')\n      const circlesColumn = allCirclesColumns[column]\n      const circlesInColumn = circlesColumn.children\n      const circle = circlesInColumn[circlesInColumn.length - 1 - row]\n      return circle\n    } else {\n      return null\n    }\n  }\n\n  function swapCircles(circleA, circleB) {\n    const circleAColorClass = determineCircleColorClass(circleA)\n    const circleBColorClass = determineCircleColorClass(circleB)\n    circleA.classList.remove(circleAColorClass)\n    circleB.classList.remove(circleBColorClass)\n    circleA.classList.add(circleBColorClass)\n    circleB.classList.add(circleAColorClass)\n  }\n\n  function determineCirclesWithSameColorInDirection(color, startPosition, offset) {\n    const circles = new Set()\n    let position = determinePositionRelativeTo(startPosition, offset)\n    while (position.row < numberOfRows && position.column < numberOfColumns) {\n      const circle = retrieveCircleAtPosition(position)\n      if (circle) {\n        const hasCircleSameColor = determineCircleColor(circle) === color\n        if (hasCircleSameColor) {\n          circles.add(circle)\n        } else {\n          break\n        }\n      } else {\n        break\n      }\n\n      position = determinePositionRelativeTo(position, offset)\n    }\n\n    return circles\n  }\n\n  function determineCirclesWithSameColorInDirectionIncludingTheStartPosition(color, startPosition, offset) {\n    const circles = new Set()\n    let position = startPosition\n    while (position.row < numberOfRows && position.column < numberOfColumns) {\n      const circle = retrieveCircleAtPosition(position)\n      if (circle) {\n        const hasCircleSameColor = determineCircleColor(circle) === color\n        if (hasCircleSameColor) {\n          circles.add(circle)\n        } else {\n          break\n        }\n      } else {\n        break\n      }\n\n      position = determinePositionRelativeTo(position, offset)\n    }\n\n    return circles\n  }\n\n  function spawnCircles(element, { rows, columns, colors }) {\n    for (let column = 0; column < columns; column++) {\n      const $column = document.createElement('div')\n      $column.classList.add('circles-column')\n      element.appendChild($column)\n\n      for (let row = 0; row < rows; row++) {\n        const colorCandidates = new Set(colors)\n        if (column >= 2) {\n          const circlesToTheLeft = [\n            retrieveCircleAtPosition({\n              row: numberOfRows - 1 - row,\n              column: column - 1,\n            }),\n            retrieveCircleAtPosition({\n              row: numberOfRows - 1 - row,\n              column: column - 2,\n            }),\n          ]\n          if (areAllEqual(circlesToTheLeft.map(circle => determineCircleColor(circle)))) {\n            const color = determineCircleColor(circlesToTheLeft[0])\n            colorCandidates.delete(color)\n          }\n        }\n        if (row >= 2) {\n          const circlesBelow = [\n            $column.children[$column.children.length - 1],\n            $column.children[$column.children.length - 2],\n          ]\n          if (areAllEqual(circlesBelow.map(circle => determineCircleColor(circle)))) {\n            const color = determineCircleColor(circlesBelow[0])\n            colorCandidates.delete(color)\n          }\n        }\n        const circle = createCircleWithRandomColor(Array.from(colorCandidates))\n        $column.appendChild(circle)\n      }\n    }\n  }\n\n  function determinePosition(circle) {\n    const column = circle.parentElement\n    const columns = Array.from(circleGrid.children)\n    const columnIndex = columns.indexOf(column)\n    const circlesInColumn = Array.from(column.children)\n    const rowIndex = circlesInColumn.length - 1 - circlesInColumn.indexOf(circle)\n\n    return {\n      row: rowIndex,\n      column: columnIndex,\n    }\n  }\n\n  window.removeConnectedCircles = removeConnectedCircles\n}\n\nfunction canBeConnected(circleA, circleB) {\n  const positionA = determinePosition(circleA)\n  const positionB = determinePosition(circleB)\n  const rowDifference = Math.abs(positionA.row - positionB.row)\n  const columnDifference = Math.abs(positionA.column - positionB.column)\n  return (rowDifference === 0 && columnDifference === 1) || (columnDifference === 0 && rowDifference === 1)\n}\n\nfunction determinePositionRelativeTo(position, offset) {\n  return {\n    row: position.row + offset.row,\n    column: position.column + offset.column,\n  }\n}\n\nfunction determineCircleColor(circle) {\n  return extractColorName(determineCircleColorClass(circle))\n}\n\nfunction determineCircleColorClass(circle) {\n  return Array.from(circle.classList).find(className => className.includes('--'))\n}\n\nfunction extractColorName(colorClass) {\n  return colorClass.split('--')[1]\n}\n\nfunction hasSquareBeenSelected(selectedCircles, numberOfColumns) {\n  if (selectedCircles.size === 4) {\n    const positions = Array.from(selectedCircles).map(determinePosition)\n    positions.sort((a, b) => calculateIndex(a, numberOfColumns) - calculateIndex(b, numberOfColumns))\n    return (\n      positions[0].row === positions[1].row &&\n      positions[0].column === positions[1].column - 1 &&\n      positions[2].row === positions[3].row &&\n      positions[2].column === positions[3].column - 1 &&\n      positions[0].row === positions[2].row - 1\n    )\n  } else {\n    return false\n  }\n}\n\nfunction calculateIndex(position, numberOfColumns) {\n  return position.row * numberOfColumns + position.column\n}\n\nfunction calculateElementCenter(element) {\n  return {\n    x: element.offsetLeft + 0.5 * element.clientWidth,\n    y: element.offsetTop + 0.5 * element.clientHeight,\n  }\n}\n\nfunction areAllEqual(elements) {\n  return new Set(elements).size === 1\n}\n\nfunction createCircleWithRandomColor(colors) {\n  const color = generateRandomColor(colors)\n  const circle = createCircle({ color })\n  return circle\n}\n\nfunction createCircle({ color }) {\n  const circle = document.createElement('div')\n  circle.classList.add('circle')\n  circle.classList.add(`circle--${color}`)\n  return circle\n}\n\nfunction generateRandomColor(colors) {\n  return selectRandomUniform(colors)\n}\n\nfunction union(...sets) {\n  const unionSet = new Set()\n\n  for (const set of sets) {\n    for (const value of set) {\n      unionSet.add(value)\n    }\n  }\n\n  return unionSet\n}\n","import { randomInteger } from './randomInteger.js'\n\nexport function selectRandomUniform(values) {\n  return values[randomInteger(0, values.length - 1)]\n}\n","export function randomInteger(minInclusive, maxInclusive) {\n  minInclusive = Math.floor(minInclusive)\n  maxInclusive = Math.floor(maxInclusive)\n  return minInclusive + Math.floor(Math.random() * (maxInclusive - minInclusive + 1))\n}\n"],"names":["reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","g","Object","freeSelf","self","root","Function","objectToString","prototype","toString","nativeMax","Math","max","nativeMin","min","now","Date","isObject","value","type","toNumber","isObjectLike","call","isSymbol","other","valueOf","replace","isBinary","test","slice","module","exports","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","remainingWait","debounced","isInvoking","arguments","this","cancel","clearTimeout","flush","n","toFinite","remainder","toInteger","before","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","a","definition","key","o","defineProperty","enumerable","get","globalThis","e","window","obj","prop","hasOwnProperty","main","numberOfColumns","colors","circleGrid","document","querySelector","element","rows","columns","column","$column","createElement","classList","add","appendChild","row","colorCandidates","Set","circlesToTheLeft","retrieveCircleAtPosition","numberOfRows","areAllEqual","map","circle","determineCircleColor","color","delete","circlesBelow","children","length","createCircleWithRandomColor","Array","from","spawnCircles","connectionLineCanvas","width","clientWidth","height","clientHeight","context","getContext","selectedCircles","firstSelectedCircle","selectedColor","lastSelectedCircle","selectedCircleOffset","lastCircleThatTheSelectedCircleWasMovingTowards","isSwappingEnabled","enableSwapping","body","isSelectingCircles","updateCircleOffsets","x","translateX","y","translateY","determineSelectedCircleOffset","style","transform","updateSelectedCircleOffset","absoluteX","abs","absoluteY","otherCircle","offset","otherCirclePosition","determinePosition","retrieveCircleWithOffsetToOtherCircle","retrieveCircleThatTheSelectedCircleIsMovingTowards","removeLastCircleThatTheSelectedCircleWasMovingTowardsOffset","updateCircleOffsetThatTheSelectedCircleIsMovingTowards","sign","CIRCLE_LENGTH","determineNormalizedCircleOffset","removeCircleOffset","removeConnectedCircles","circlesToRemove","circles","querySelectorAll","startPosition","offsets","circlesWithSameColorOnLine","determineCirclesWithSameColorInDirectionIncludingTheStartPosition","size","union","removeCircles","remove","circlesThatFall","circlesThatAreRemovedGroupedByColumn","index","groupCirclesIntoColumns","maximumFallOffset","top","circlesThatFallGroupedByColumn","columnIndex","circlesThatAreRemovedInColumn","circlesThatFallInColumn","determineCirclesThatFallInColumn","numberOfCirclesToAddToColumn","i","newCircle","requestAnimationFrame","onTransitionEnd","debounce","once","removeEventListener","addEventListener","circleThatFallsInColumn","circleThatFallsInColumnRow","fallOffset","filter","biggestRowOfCirclesThatFall","has","removeCircle","parentElement","position","circlesInColumn","determineCirclesWithSameColorInDirection","determinePositionRelativeTo","indexOf","event","target","contains","preventDefault","canBeConnected","circleA","circleB","beginPath","x1","y1","calculateElementCenter","moveTo","x2","y2","lineTo","stroke","drawConnectionLine","movementX","movementY","hasSquareBeenSelected","forEach","offsetX","offsetY","circleAColorClass","determineCircleColorClass","circleBColorClass","swapCircles","circlesToRemovePart","horizontalOffsets","verticalOffsets","offsetSets","offsetSet","circlesWithSameColor","MINIMUM_AMOUNT_OF_CIRCLES_ON_SAME_LINE_FOR_REMOVAL","clearRect","positionA","positionB","rowDifference","columnDifference","split","find","className","includes","positions","sort","b","calculateIndex","offsetLeft","offsetTop","elements","values","minInclusive","maxInclusive","floor","random","generateRandomColor","createCircle","sets","unionSet","set"],"sourceRoot":""}