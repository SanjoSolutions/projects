{"version":3,"file":"index.js","mappings":"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","sources":["webpack:///./node_modules/lodash.debounce/index.js","webpack:///./node_modules/lodash.once/index.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///./node_modules/@sanjo/array/combinations.js","webpack:///./node_modules/@sanjo/cache/Cache.js","webpack:///./node_modules/@sanjo/array/last.js","webpack:///./node_modules/@sanjo/cache/ObjectCache.js","webpack:///./node_modules/@sanjo/set/union.js","webpack:///./src/index.js","webpack:///../selectRandomUniform.js","webpack:///../randomInteger.js","webpack:///./node_modules/@sanjo/set/nOutOf.js","webpack:///./node_modules/@sanjo/set/nOutOfWithDuplicates.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = once;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { getIndexSubSequences } from './getIndexSubSequences.js';\nexport function combinations(setOrArray) {\n    const array = [...setOrArray];\n    let indexSubSequences;\n    const length = array.length;\n    if (combinations.indexSubSequencesCache.has(length)) {\n        indexSubSequences = combinations.indexSubSequencesCache.get(length);\n    }\n    else {\n        indexSubSequences = getIndexSubSequences(length);\n        combinations.indexSubSequencesCache.set(length, indexSubSequences);\n    }\n    const subSequences = indexSubSequences.map(indexSubSequence => indexSubSequence.map(index => array[index]));\n    return subSequences;\n}\ncombinations.indexSubSequencesCache = new Map();\n//# sourceMappingURL=combinations.js.map","import { last } from '@sanjo/array';\nexport const FAILED_TO_RETRIEVE_VALUE_ERROR_MESSAGE = 'Failed to retrieve value.';\nexport class Cache {\n    _cache;\n    constructor() {\n        this._cache = new Map();\n    }\n    has(key) {\n        return Boolean(this._retrieveValue(key, () => false));\n    }\n    retrieve(key) {\n        return this._retrieveValue(key, () => {\n            throw new Error(FAILED_TO_RETRIEVE_VALUE_ERROR_MESSAGE);\n        });\n    }\n    set(key, value) {\n        key = this._convertKeyToArray(key);\n        let object = this._cache;\n        for (const keyPart of key.slice(0, key.length - 1)) {\n            if (object instanceof Map && object.has(keyPart)) {\n                object = object.get(keyPart);\n            }\n            else {\n                const newObject = new Map();\n                object.set(keyPart, newObject);\n                object = newObject;\n            }\n        }\n        object.set(last(key), value);\n    }\n    clear() {\n        this._cache = new Map();\n    }\n    _convertKeyToArray(key) {\n        let result;\n        if (Array.isArray(key)) {\n            result = key;\n        }\n        else {\n            result = [key];\n        }\n        return result;\n    }\n    _retrieveValue(key, onMiss) {\n        key = this._convertKeyToArray(key);\n        let object = this._cache;\n        for (const keyPart of key) {\n            if (object instanceof Map && object.has(keyPart)) {\n                object = object.get(keyPart);\n            }\n            else {\n                return onMiss();\n            }\n        }\n        return object;\n    }\n}\n//# sourceMappingURL=Cache.js.map","export function last(array) {\n    const length = array.length;\n    return length >= 1 ? array[length - 1] : null;\n}\n//# sourceMappingURL=last.js.map","import { Cache, FAILED_TO_RETRIEVE_VALUE_ERROR_MESSAGE } from './Cache.js';\nexport class ObjectCache {\n    _cache = new Cache();\n    has(key) {\n        const keyArray = this._convertKeyToArray(key);\n        return this._cache.has(keyArray);\n    }\n    get(key) {\n        const keyArray = this._convertKeyToArray(key);\n        try {\n            return this._cache.retrieve(keyArray);\n        }\n        catch (error) {\n            if (error.message === FAILED_TO_RETRIEVE_VALUE_ERROR_MESSAGE) {\n                return null;\n            }\n            else {\n                throw error;\n            }\n        }\n    }\n    set(key, value) {\n        const keyArray = this._convertKeyToArray(key);\n        this._cache.set(keyArray, value);\n    }\n    clear() {\n        this._cache.clear();\n    }\n    _convertKeyToArray(key) {\n        return this._convertKeyObjectToArray(key);\n    }\n    _convertKeyObjectToArray(key) {\n        const propertyNames = Object.keys(key);\n        propertyNames.sort();\n        return propertyNames.map(propertyName => key[propertyName]);\n    }\n}\n//# sourceMappingURL=ObjectCache.js.map","export function union(...sets) {\n    const unionSet = new Set();\n    for (const set of sets) {\n        for (const element of set) {\n            unionSet.add(element);\n        }\n    }\n    return unionSet;\n}\n//# sourceMappingURL=union.js.map","import debounce from \"lodash.debounce\";\nimport once from \"lodash.once\";\nimport { selectRandomUniform } from \"../../selectRandomUniform.js\";\nimport { union } from \"@sanjo/set\";\n\nconst CIRCLE_MARGIN = 4; // 0.25rem with 1rem = 16px\nconst SPACE_BETWEEN_CIRCLES = 2 * CIRCLE_MARGIN;\nconst CIRCLE_LENGTH = 32; // 2rem with 1rem = 16px\nconst CIRCLE_WIDTH = CIRCLE_LENGTH;\nconst CIRCLE_HEIGHT = CIRCLE_LENGTH;\nconst CIRCLE_BORDER = 1; // px\nconst MAXIMUM_MOVE_DISTANCE =\n  CIRCLE_LENGTH + 2 * CIRCLE_BORDER + SPACE_BETWEEN_CIRCLES;\nconst DISTANCE_THRESHOLD =\n  0.5 * (CIRCLE_LENGTH + 2 * CIRCLE_BORDER + SPACE_BETWEEN_CIRCLES); // px\nconst MINIMUM_AMOUNT_OF_CIRCLES_ON_SAME_LINE_FOR_REMOVAL = 3;\n\nexport function main() {\n  const numberOfRows = 20;\n  const numberOfColumns = 20;\n  const colors = [\"red\", \"green\", \"yellow\", \"blue\"];\n  const circleGrid = document.querySelector(\".circle-grid\");\n  spawnCircles(circleGrid, {\n    rows: numberOfRows,\n    columns: numberOfColumns,\n    colors,\n  });\n\n  const container = document.querySelector(\".container\");\n  container.style.width = circleGrid.clientWidth + \"px\";\n  container.style.height = circleGrid.clientHeight + \"px\";\n\n  let selectedCircles = new Set();\n  let firstSelectedCircle = null;\n  let selectedColor = null;\n  let lastSelectedCircle = null;\n  let selectedCircleOffset = null;\n  let lastCircleThatTheSelectedCircleWasMovingTowards = null;\n  let isSwappingEnabled = false;\n\n  function enableSwapping() {\n    isSwappingEnabled = true;\n    document.body.classList.add(\"swapping-enabled\");\n  }\n\n  function disableSwapping() {\n    isSwappingEnabled = false;\n    document.body.classList.remove(\"swapping-enabled\");\n  }\n\n  enableSwapping();\n\n  function isSelectingCircles() {\n    return lastSelectedCircle !== null;\n  }\n\n  circleGrid.addEventListener(\"pointerdown\", function (event) {\n    if (isSwappingEnabled) {\n      const target = event.target;\n      if (target.classList.contains(\"circle\")) {\n        event.preventDefault();\n        const circle = target;\n        selectedCircles.add(circle);\n        firstSelectedCircle = circle;\n        selectedColor = determineCircleColor(firstSelectedCircle);\n        lastSelectedCircle = circle;\n        selectedCircleOffset = {\n          x: 0,\n          y: 0,\n        };\n        firstSelectedCircle.classList.add(\"circle--dragged\");\n        updateCircleOffsets();\n      }\n    }\n  });\n\n  circleGrid.addEventListener(\"pointermove\", function (event) {\n    if (isSelectingCircles()) {\n      const target = event.target;\n      if (target.classList.contains(\"circle\")) {\n        const circle = target;\n        const circleColor = determineCircleColor(circle);\n        if (\n          circleColor === selectedColor &&\n          (!selectedCircles.has(circle) ||\n            (selectedCircles.size >= 3 && circle === firstSelectedCircle)) &&\n          canBeConnected(circle, lastSelectedCircle)\n        ) {\n          selectedCircles.add(circle);\n          lastSelectedCircle = circle;\n        }\n      }\n      selectedCircleOffset = {\n        x: selectedCircleOffset.x + event.movementX,\n        y: selectedCircleOffset.y + event.movementY,\n      };\n      updateCircleOffsets();\n    }\n  });\n\n  window.addEventListener(\"pointerup\", function () {\n    if (isSelectingCircles()) {\n      if (selectedCircles.size >= 2) {\n        if (hasSquareBeenSelected(selectedCircles, numberOfColumns)) {\n          const circles = circleGrid.querySelectorAll(\".circle\");\n          for (const circle of circles) {\n            if (determineCircleColor(circle) === selectedColor) {\n              removeCircle(circle);\n            }\n          }\n        } else {\n          selectedCircles.forEach(removeCircle);\n        }\n      }\n\n      if (lastCircleThatTheSelectedCircleWasMovingTowards) {\n        const { x: offsetX, y: offsetY } = determineSelectedCircleOffset();\n        const distanceMoved = Math.abs(offsetX + offsetY);\n        if (distanceMoved > DISTANCE_THRESHOLD) {\n          swapCircles(\n            firstSelectedCircle,\n            lastCircleThatTheSelectedCircleWasMovingTowards\n          );\n\n          let circlesToRemove = new Set();\n          for (const circle of new Set([\n            firstSelectedCircle,\n            lastCircleThatTheSelectedCircleWasMovingTowards,\n          ])) {\n            let circlesToRemovePart = new Set();\n            const color = determineCircleColor(circle);\n            const startPosition = determinePosition(circle);\n            const horizontalOffsets = new Set([\n              { row: 0, column: -1 },\n              { row: 0, column: 1 },\n            ]);\n            const verticalOffsets = new Set([\n              { row: -1, column: 0 },\n              { row: 1, column: 0 },\n            ]);\n            const offsetSets = new Set([horizontalOffsets, verticalOffsets]);\n            for (const offsetSet of offsetSets) {\n              let circlesWithSameColor = new Set();\n              for (const offset of offsetSet) {\n                circlesWithSameColor = union(\n                  circlesWithSameColor,\n                  determineCirclesWithSameColorInDirection(\n                    color,\n                    startPosition,\n                    offset\n                  )\n                );\n              }\n              if (\n                circlesWithSameColor.size >=\n                MINIMUM_AMOUNT_OF_CIRCLES_ON_SAME_LINE_FOR_REMOVAL - 1\n              ) {\n                circlesToRemovePart = union(\n                  circlesToRemovePart,\n                  circlesWithSameColor\n                );\n              }\n            }\n            if (circlesToRemovePart.size >= 1) {\n              circlesToRemovePart.add(circle);\n            }\n            circlesToRemove = union(circlesToRemove, circlesToRemovePart);\n          }\n\n          removeCircles(circlesToRemove);\n        }\n      }\n\n      firstSelectedCircle.classList.remove(\"circle--dragged\");\n      removeSelectedCircleOffset();\n      removeLastCircleThatTheSelectedCircleWasMovingTowardsOffset();\n\n      selectedCircles = new Set();\n      firstSelectedCircle = null;\n      selectedColor = null;\n      lastSelectedCircle = null;\n      selectedCircleOffset = null;\n      lastCircleThatTheSelectedCircleWasMovingTowards = null;\n    }\n  });\n\n  function updateCircleOffsets() {\n    updateSelectedCircleOffset();\n    updateCircleOffsetThatTheSelectedCircleIsMovingTowards();\n  }\n\n  function updateSelectedCircleOffset() {\n    const { x: translateX, y: translateY } = determineSelectedCircleOffset();\n    firstSelectedCircle.style.transform = `translate(${translateX}px, ${translateY}px)`;\n  }\n\n  function determineSelectedCircleOffset() {\n    return determineNormalizedCircleOffset(selectedCircleOffset);\n  }\n\n  function determineNormalizedCircleOffset(offset) {\n    const { x, y } = offset;\n    const absoluteX = Math.abs(x);\n    const absoluteY = Math.abs(y);\n    const normalizedX =\n      absoluteX > absoluteY\n        ? Math.sign(x) * Math.min(Math.abs(x), MAXIMUM_MOVE_DISTANCE)\n        : 0;\n    const normalizedY =\n      absoluteY > absoluteX\n        ? Math.sign(y) * Math.min(Math.abs(y), MAXIMUM_MOVE_DISTANCE)\n        : 0;\n    return {\n      x: normalizedX,\n      y: normalizedY,\n    };\n  }\n\n  function updateCircleOffsetThatTheSelectedCircleIsMovingTowards() {\n    const circle = retrieveCircleThatTheSelectedCircleIsMovingTowards();\n    if (\n      lastCircleThatTheSelectedCircleWasMovingTowards &&\n      circle !== lastCircleThatTheSelectedCircleWasMovingTowards\n    ) {\n      removeLastCircleThatTheSelectedCircleWasMovingTowardsOffset();\n    }\n    if (circle) {\n      const selectedCircleOffset = determineSelectedCircleOffset();\n      const translateX = -selectedCircleOffset.x;\n      const translateY = -selectedCircleOffset.y;\n      circle.style.transform = `translate(${translateX}px, ${translateY}px)`;\n    }\n    lastCircleThatTheSelectedCircleWasMovingTowards = circle;\n  }\n\n  function retrieveCircleThatTheSelectedCircleIsMovingTowards() {\n    const { x, y } = selectedCircleOffset;\n    if (x !== 0 || y !== 0) {\n      const absoluteX = Math.abs(x);\n      const absoluteY = Math.abs(y);\n      const rowOffset = absoluteY > absoluteX ? (y > 0 ? 1 : -1) : 0;\n      const columnOffset = absoluteX > absoluteY ? (x > 0 ? 1 : -1) : 0;\n      const offset = {\n        row: rowOffset,\n        column: columnOffset,\n      };\n      const circle = retrieveCircleWithOffsetToOtherCircle(\n        firstSelectedCircle,\n        offset\n      );\n      return circle;\n    } else {\n      return null;\n    }\n  }\n\n  function removeSelectedCircleOffset() {\n    removeCircleOffset(firstSelectedCircle);\n  }\n\n  function removeLastCircleThatTheSelectedCircleWasMovingTowardsOffset() {\n    if (lastCircleThatTheSelectedCircleWasMovingTowards) {\n      removeCircleOffset(lastCircleThatTheSelectedCircleWasMovingTowards);\n    }\n  }\n\n  function removeConnectedCircles() {\n    let circlesToRemove = new Set();\n    const circles = circleGrid.querySelectorAll(\".circle\");\n    for (const circle of circles) {\n      const color = determineCircleColor(circle);\n      const startPosition = determinePosition(circle);\n      const offsets = new Set([\n        { row: 0, column: 1 },\n        { row: 1, column: 0 },\n      ]);\n      for (const offset of offsets) {\n        const circlesWithSameColorOnLine = determineCirclesWithSameColorInDirectionIncludingTheStartPosition(\n          color,\n          startPosition,\n          offset\n        );\n        if (\n          circlesWithSameColorOnLine.size >=\n          MINIMUM_AMOUNT_OF_CIRCLES_ON_SAME_LINE_FOR_REMOVAL\n        ) {\n          circlesToRemove = union(circlesToRemove, circlesWithSameColorOnLine);\n        }\n      }\n    }\n\n    removeCircles(circlesToRemove);\n  }\n\n  function removeCircleOffset(circle) {\n    circle.style.transform = null;\n  }\n\n  function removeCircles(circlesToRemove) {\n    if (circlesToRemove.size >= 1) {\n      disableSwapping();\n      let circlesThatFall = new Set();\n      for (const circle of circlesToRemove) {\n        circle.classList.add(\"circle--hidden\");\n      }\n      const circlesThatAreRemovedGroupedByColumn = groupCirclesIntoColumns(\n        circlesToRemove\n      );\n      const maximumFallOffset =\n        Math.max(\n          ...Array.from(circlesThatAreRemovedGroupedByColumn).map(\n            (column) => column.size\n          )\n        ) *\n        (CIRCLE_HEIGHT + 2 * CIRCLE_BORDER + SPACE_BETWEEN_CIRCLES);\n      circleGrid.style.top = `${-maximumFallOffset}px`;\n      const circlesThatFallGroupedByColumn = new Array(numberOfColumns);\n      for (\n        let columnIndex = 0;\n        columnIndex < circlesThatAreRemovedGroupedByColumn.length;\n        columnIndex++\n      ) {\n        const circlesThatAreRemovedInColumn =\n          circlesThatAreRemovedGroupedByColumn[columnIndex];\n        if (circlesThatAreRemovedInColumn.size >= 1) {\n          const circlesThatFallInColumn = determineCirclesThatFallInColumn(\n            columnIndex,\n            circlesThatAreRemovedInColumn\n          );\n          circlesThatFall = union(circlesThatFall, circlesThatFallInColumn);\n\n          const columns = circleGrid.children;\n          const column = columns[columnIndex];\n          const numberOfCirclesToAddToColumn =\n            circlesThatAreRemovedInColumn.size;\n          for (let i = 1; i <= numberOfCirclesToAddToColumn; i++) {\n            const newCircle = createCircleWithRandomColor(colors);\n            column.appendChild(newCircle);\n            circlesThatFallInColumn.add(newCircle);\n            circlesThatFall.add(newCircle);\n          }\n\n          circlesThatFallGroupedByColumn[columnIndex] = circlesThatFallInColumn;\n        } else {\n          circlesThatFallGroupedByColumn[columnIndex] = new Set();\n        }\n      }\n\n      requestAnimationFrame(() => {\n        for (const circle of circlesThatFall) {\n          circle.classList.add(\"circle--falling\");\n        }\n        requestAnimationFrame(() => {\n          const onTransitionEnd = debounce(\n            once(function onTransitionEnd() {\n              circleGrid.style.top = \"0px\";\n              circleGrid.removeEventListener(\"transitionend\", onTransitionEnd);\n\n              for (const circle of circlesToRemove) {\n                circle.remove();\n              }\n\n              for (const circle of circlesThatFall) {\n                circle.classList.remove(\"circle--falling\");\n                circle.style.top = null;\n              }\n\n              requestAnimationFrame(removeConnectedCircles);\n            })\n          );\n          circleGrid.addEventListener(\"transitionend\", onTransitionEnd);\n\n          for (\n            let columnIndex = 0;\n            columnIndex < numberOfColumns;\n            columnIndex++\n          ) {\n            const circlesThatFallInColumn =\n              circlesThatFallGroupedByColumn[columnIndex];\n            for (const circleThatFallsInColumn of circlesThatFallInColumn) {\n              const circleThatFallsInColumnRow = determinePosition(\n                circleThatFallsInColumn\n              ).row;\n              const circlesThatAreRemovedInColumn =\n                circlesThatAreRemovedGroupedByColumn[columnIndex];\n              const numberOfCirclesThatAreRemovedBelowCircle = Array.from(\n                circlesThatAreRemovedInColumn\n              ).filter(\n                (circle) =>\n                  determinePosition(circle).row > circleThatFallsInColumnRow\n              ).length;\n              const fallOffset =\n                numberOfCirclesThatAreRemovedBelowCircle *\n                (CIRCLE_HEIGHT + 2 * CIRCLE_BORDER + SPACE_BETWEEN_CIRCLES);\n              circleThatFallsInColumn.style.top = `${fallOffset}px`;\n            }\n          }\n        });\n      });\n    } else {\n      enableSwapping();\n    }\n  }\n\n  function groupCirclesIntoColumns(circles) {\n    const columns = new Array(numberOfColumns);\n    for (let index = 0; index < columns.length; index++) {\n      columns[index] = new Set();\n    }\n    for (const circle of circles) {\n      const { column } = determinePosition(circle);\n      columns[column].add(circle);\n    }\n    return columns;\n  }\n\n  function determineCirclesThatFallInColumn(\n    column,\n    circlesThatAreRemovedInColumn\n  ) {\n    const circlesThatFall = new Set();\n    let biggestRowOfCirclesThatFall = Math.max(\n      ...Array.from(circlesThatAreRemovedInColumn).map(\n        (circle) => determinePosition(circle).row\n      )\n    );\n    let row = 0;\n    while (row < biggestRowOfCirclesThatFall) {\n      const circle = retrieveCircleAtPosition({\n        row,\n        column,\n      });\n      if (circle && !circlesThatAreRemovedInColumn.has(circle)) {\n        circlesThatFall.add(circle);\n      }\n      row++;\n    }\n    return circlesThatFall;\n  }\n\n  function removeCircle(circle) {\n    const column = circle.parentElement;\n    circle.remove();\n    const newCircle = createCircleWithRandomColor(colors);\n    column.appendChild(newCircle);\n  }\n\n  function retrieveCircleWithOffsetToOtherCircle(otherCircle, offset) {\n    const otherCirclePosition = determinePosition(otherCircle);\n    const circlePosition = {\n      row: otherCirclePosition.row + offset.row,\n      column: otherCirclePosition.column + offset.column,\n    };\n    const circle = retrieveCircleAtPosition(circlePosition);\n    return circle;\n  }\n\n  function retrieveCircleAtPosition(position) {\n    const { row, column } = position;\n    if (\n      row >= 0 &&\n      row < numberOfRows &&\n      column >= 0 &&\n      column < numberOfColumns\n    ) {\n      const allCirclesColumns = circleGrid.querySelectorAll(\".circles-column\");\n      const circlesColumn = allCirclesColumns[column];\n      const circlesInColumn = circlesColumn.children;\n      const circle = circlesInColumn[circlesInColumn.length - 1 - row];\n      return circle;\n    } else {\n      return null;\n    }\n  }\n\n  function swapCircles(circleA, circleB) {\n    const circleAColorClass = determineCircleColorClass(circleA);\n    const circleBColorClass = determineCircleColorClass(circleB);\n    circleA.classList.remove(circleAColorClass);\n    circleB.classList.remove(circleBColorClass);\n    circleA.classList.add(circleBColorClass);\n    circleB.classList.add(circleAColorClass);\n  }\n\n  function determineCirclesWithSameColorInDirection(\n    color,\n    startPosition,\n    offset\n  ) {\n    const circles = new Set();\n    let position = determinePositionRelativeTo(startPosition, offset);\n    while (position.row < numberOfRows && position.column < numberOfColumns) {\n      const circle = retrieveCircleAtPosition(position);\n      if (circle) {\n        const hasCircleSameColor = determineCircleColor(circle) === color;\n        if (hasCircleSameColor) {\n          circles.add(circle);\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n\n      position = determinePositionRelativeTo(position, offset);\n    }\n\n    return circles;\n  }\n\n  function determineCirclesWithSameColorInDirectionIncludingTheStartPosition(\n    color,\n    startPosition,\n    offset\n  ) {\n    const circles = new Set();\n    let position = startPosition;\n    while (position.row < numberOfRows && position.column < numberOfColumns) {\n      const circle = retrieveCircleAtPosition(position);\n      if (circle) {\n        const hasCircleSameColor = determineCircleColor(circle) === color;\n        if (hasCircleSameColor) {\n          circles.add(circle);\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n\n      position = determinePositionRelativeTo(position, offset);\n    }\n\n    return circles;\n  }\n\n  function spawnCircles(element, { rows, columns, colors }) {\n    for (let column = 0; column < columns; column++) {\n      const $column = document.createElement(\"div\");\n      $column.classList.add(\"circles-column\");\n      element.appendChild($column);\n\n      for (let row = 0; row < rows; row++) {\n        const colorCandidates = new Set(colors);\n        if (column >= 2) {\n          const circlesToTheLeft = [\n            retrieveCircleAtPosition({\n              row: numberOfRows - 1 - row,\n              column: column - 1,\n            }),\n            retrieveCircleAtPosition({\n              row: numberOfRows - 1 - row,\n              column: column - 2,\n            }),\n          ];\n          if (\n            areAllEqual(\n              circlesToTheLeft.map((circle) => determineCircleColor(circle))\n            )\n          ) {\n            const color = determineCircleColor(circlesToTheLeft[0]);\n            colorCandidates.delete(color);\n          }\n        }\n        if (row >= 2) {\n          const circlesBelow = [\n            $column.children[$column.children.length - 1],\n            $column.children[$column.children.length - 2],\n          ];\n          if (\n            areAllEqual(\n              circlesBelow.map((circle) => determineCircleColor(circle))\n            )\n          ) {\n            const color = determineCircleColor(circlesBelow[0]);\n            colorCandidates.delete(color);\n          }\n        }\n        const circle = createCircleWithRandomColor(Array.from(colorCandidates));\n        $column.appendChild(circle);\n      }\n    }\n  }\n\n  function determinePosition(circle) {\n    const column = circle.parentElement;\n    const columns = Array.from(circleGrid.children);\n    const columnIndex = columns.indexOf(column);\n    const circlesInColumn = Array.from(column.children);\n    const rowIndex =\n      circlesInColumn.length - 1 - circlesInColumn.indexOf(circle);\n\n    return {\n      row: rowIndex,\n      column: columnIndex,\n    };\n  }\n}\n\nfunction canBeConnected(circleA, circleB) {\n  const positionA = determinePosition(circleA);\n  const positionB = determinePosition(circleB);\n  const rowDifference = Math.abs(positionA.row - positionB.row);\n  const columnDifference = Math.abs(positionA.column - positionB.column);\n  return (\n    (rowDifference === 0 && columnDifference === 1) ||\n    (columnDifference === 0 && rowDifference === 1)\n  );\n}\n\nfunction determinePositionRelativeTo(position, offset) {\n  return {\n    row: position.row + offset.row,\n    column: position.column + offset.column,\n  };\n}\n\nfunction determineCircleColor(circle) {\n  return extractColorName(determineCircleColorClass(circle));\n}\n\nfunction determineCircleColorClass(circle) {\n  return Array.from(circle.classList).find((className) =>\n    className.includes(\"--\")\n  );\n}\n\nfunction extractColorName(colorClass) {\n  return colorClass.split(\"--\")[1];\n}\n\nfunction hasSquareBeenSelected(selectedCircles, numberOfColumns) {\n  if (selectedCircles.size === 4) {\n    const positions = Array.from(selectedCircles).map(determinePosition);\n    positions.sort(\n      (a, b) =>\n        calculateIndex(a, numberOfColumns) - calculateIndex(b, numberOfColumns)\n    );\n    return (\n      positions[0].row === positions[1].row &&\n      positions[0].column === positions[1].column - 1 &&\n      positions[2].row === positions[3].row &&\n      positions[2].column === positions[3].column - 1 &&\n      positions[0].row === positions[2].row - 1\n    );\n  } else {\n    return false;\n  }\n}\n\nfunction calculateIndex(position, numberOfColumns) {\n  return position.row * numberOfColumns + position.column;\n}\n\nfunction calculateElementCenter(element) {\n  return {\n    x: element.offsetLeft + 0.5 * element.clientWidth,\n    y: element.offsetTop + 0.5 * element.clientHeight,\n  };\n}\n\nfunction areAllEqual(elements) {\n  return new Set(elements).size === 1;\n}\n\nfunction createCircleWithRandomColor(colors) {\n  const color = generateRandomColor(colors);\n  const circle = createCircle({ color });\n  return circle;\n}\n\nfunction createCircle({ color }) {\n  const circle = document.createElement(\"div\");\n  circle.classList.add(\"circle\");\n  circle.classList.add(`circle--${color}`);\n  return circle;\n}\n\nfunction generateRandomColor(colors) {\n  return selectRandomUniform(colors);\n}\n","import { randomInteger } from './randomInteger.js'\n\nexport function selectRandomUniform(values) {\n  return values[randomInteger(0, values.length - 1)]\n}\n","export function randomInteger(minInclusive, maxInclusive) {\n  minInclusive = Math.floor(minInclusive)\n  maxInclusive = Math.floor(maxInclusive)\n  return minInclusive + Math.floor(Math.random() * (maxInclusive - minInclusive + 1))\n}\n","import { last } from '@sanjo/array';\nimport { nOutOfBase } from './nOutOfBase.js';\nimport { ObjectCache } from '@sanjo/cache';\nexport function nOutOf(n, set) {\n    return nOutOfBase(n, set, nOutOf.indexSubSequencesCache, getNextSubSequenceElementStartValue);\n}\nnOutOf.indexSubSequencesCache = new ObjectCache();\nexport function getNextSubSequenceElementStartValue(subSequence) {\n    return subSequence.length === 0 ? 0 : last(subSequence) + 1;\n}\n//# sourceMappingURL=nOutOf.js.map","import { last } from '@sanjo/array';\nimport { nOutOfBase } from './nOutOfBase.js';\nimport { ObjectCache } from '@sanjo/cache';\nexport function nOutOfWithDuplicates(n, set) {\n    return nOutOfBase(n, set, nOutOfWithDuplicates.indexSubSequencesCache, getNextSubSequenceElementStartValue);\n}\nnOutOfWithDuplicates.indexSubSequencesCache = new ObjectCache();\nexport function getNextSubSequenceElementStartValue(subSequence) {\n    return subSequence.length === 0 ? 0 : last(subSequence);\n}\n//# sourceMappingURL=nOutOfWithDuplicates.js.map"],"names":["reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","g","Object","freeSelf","self","root","Function","objectToString","prototype","toString","nativeMax","Math","max","nativeMin","min","now","Date","isObject","value","type","toNumber","isObjectLike","call","isSymbol","other","valueOf","replace","isBinary","test","slice","module","exports","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","remainingWait","debounced","isInvoking","arguments","this","cancel","clearTimeout","flush","n","toFinite","remainder","toInteger","before","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","a","definition","key","o","defineProperty","enumerable","get","globalThis","e","window","obj","prop","hasOwnProperty","Map","FAILED_TO_RETRIEVE_VALUE_ERROR_MESSAGE","_cache","constructor","has","Boolean","_retrieveValue","retrieve","Error","set","_convertKeyToArray","object","keyPart","length","newObject","array","last","clear","Array","isArray","onMiss","ObjectCache","keyArray","error","message","_convertKeyObjectToArray","propertyNames","keys","sort","map","propertyName","union","sets","unionSet","Set","element","add","main","numberOfColumns","colors","circleGrid","document","querySelector","rows","columns","column","$column","createElement","classList","appendChild","row","colorCandidates","circlesToTheLeft","retrieveCircleAtPosition","numberOfRows","areAllEqual","circle","determineCircleColor","color","delete","circlesBelow","children","createCircleWithRandomColor","from","spawnCircles","container","style","width","clientWidth","height","clientHeight","selectedCircles","firstSelectedCircle","selectedColor","lastSelectedCircle","selectedCircleOffset","lastCircleThatTheSelectedCircleWasMovingTowards","isSwappingEnabled","enableSwapping","body","isSelectingCircles","updateCircleOffsets","x","translateX","y","translateY","determineSelectedCircleOffset","transform","updateSelectedCircleOffset","absoluteX","abs","absoluteY","otherCircle","offset","otherCirclePosition","determinePosition","retrieveCircleWithOffsetToOtherCircle","retrieveCircleThatTheSelectedCircleIsMovingTowards","removeLastCircleThatTheSelectedCircleWasMovingTowardsOffset","updateCircleOffsetThatTheSelectedCircleIsMovingTowards","sign","CIRCLE_LENGTH","determineNormalizedCircleOffset","removeCircleOffset","removeConnectedCircles","circlesToRemove","circles","querySelectorAll","startPosition","offsets","circlesWithSameColorOnLine","determineCirclesWithSameColorInDirectionIncludingTheStartPosition","size","removeCircles","remove","circlesThatFall","circlesThatAreRemovedGroupedByColumn","index","groupCirclesIntoColumns","maximumFallOffset","top","circlesThatFallGroupedByColumn","columnIndex","circlesThatAreRemovedInColumn","circlesThatFallInColumn","determineCirclesThatFallInColumn","numberOfCirclesToAddToColumn","i","newCircle","requestAnimationFrame","onTransitionEnd","debounce","once","removeEventListener","addEventListener","circleThatFallsInColumn","circleThatFallsInColumnRow","fallOffset","filter","biggestRowOfCirclesThatFall","removeCircle","parentElement","position","circlesInColumn","determineCirclesWithSameColorInDirection","determinePositionRelativeTo","indexOf","event","target","contains","preventDefault","canBeConnected","movementX","movementY","hasSquareBeenSelected","forEach","offsetX","offsetY","circleA","circleB","circleAColorClass","determineCircleColorClass","circleBColorClass","swapCircles","circlesToRemovePart","horizontalOffsets","verticalOffsets","offsetSets","offsetSet","circlesWithSameColor","MINIMUM_AMOUNT_OF_CIRCLES_ON_SAME_LINE_FOR_REMOVAL","positionA","positionB","rowDifference","columnDifference","split","find","className","includes","positions","b","calculateIndex","elements","values","minInclusive","maxInclusive","floor","random","generateRandomColor","createCircle"],"sourceRoot":""}