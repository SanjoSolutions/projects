{"version":3,"sources":["../src/index.js"],"names":["intervalBetweenProcessRuns","run","main","contactData","flatOfferFetchers","browserPromise","getBrowser","createBrowser","then","browser","on","runFromHour","runToHour","shouldRun","now","Date","currentUTCHour","getUTCHours","shouldStop","runProcess","console","log","onProcessStop","scheduleNextProcessStart","callback","timerForHour","hour","hoursUntilTimeout","oneHourInMilliseconds","nextProcessStartTime","Math","floor","setTimeout","fn","puppeteer","launch","headless","defaultViewport","width","height"],"mappings":";;AAAA;;AACA;;AACA;;;;;;;AAEA,MAAMA,0BAA0B,GAAG,KAAnC;AAEAC,GAAG,CAACC,IAAD,CAAH;;AAEA,eAAeA,IAAf,GAAuB;AACrB,+BAAkBC,mBAAlB;AACA,QAAMC,iBAAiB,GAAG,MAAM,iCAAhC;AAEA,MAAIC,cAAJ;;AAEA,WAASC,UAAT,GAAuB;AACrB,QAAI,CAACD,cAAL,EAAqB;AACnBA,MAAAA,cAAc,GAAGE,aAAa,EAA9B;AACAF,MAAAA,cAAc,CAACG,IAAf,CAAoBC,OAAO,IAAI;AAC7BA,QAAAA,OAAO,CAACC,EAAR,CAAW,YAAX,EAAyB,MAAM;AAC7BL,UAAAA,cAAc,GAAG,IAAjB;AACD,SAFD;AAGD,OAJD;AAMD;;AACD,WAAOA,cAAP;AACD,GAjBoB,CAmBrB;;;AACA,QAAMM,WAAW,GAAG,CAApB;AACA,QAAMC,SAAS,GAAG,EAAlB;;AAEA,WAASC,SAAT,GAAsB;AACpB,UAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,UAAMC,cAAc,GAAGF,GAAG,CAACG,WAAJ,EAAvB;AACA,WAAQN,WAAW,IAAIK,cAAf,IAAiCA,cAAc,IAAIJ,SAA3D;AACD;;AAED,WAASM,UAAT,GAAuB;AACrB,WAAO,CAACL,SAAS,EAAjB;AACD;;AAED,iBAAeM,UAAf,GAA6B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,UAAM,mBACJf,UADI,EAEJF,iBAFI,EAGJ;AAAEJ,MAAAA,0BAAF;AAA8BG,MAAAA,WAAW,EAAXA,mBAA9B;AAA2Ce,MAAAA;AAA3C,KAHI,CAAN;AAKAI,IAAAA,aAAa,CAACC,wBAAD,CAAb;AACD;;AAED,WAASD,aAAT,CAAwBE,QAAxB,EAAkC;AAChCC,IAAAA,YAAY,CAACb,SAAD,EAAY,MAAM;AAC5BQ,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAG,MAAAA,QAAQ;AACT,KAHW,CAAZ;AAID;;AAED,WAASD,wBAAT,GAAqC;AACnCH,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAI,IAAAA,YAAY,CAACd,WAAD,EAAcQ,UAAd,CAAZ;AACD;;AAED,WAASM,YAAT,CAAuBC,IAAvB,EAA6BF,QAA7B,EAAuC;AACrC,QAAIG,iBAAJ;AACA,UAAMb,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,UAAMC,cAAc,GAAGF,GAAG,CAACG,WAAJ,EAAvB;;AACA,QAAID,cAAc,GAAGU,IAArB,EAA2B;AACzBC,MAAAA,iBAAiB,GAAGD,IAAI,GAAGV,cAA3B;AACD,KAFD,MAEO;AACLW,MAAAA,iBAAiB,GAAG,KAAKX,cAAL,GAAsBU,IAA1C;AACD;;AACD,UAAME,qBAAqB,GAAG,IAAI,EAAJ,GAAS,EAAT,GAAc,IAA5C;AACA,UAAMC,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWhB,IAAI,CAACD,GAAL,KAAac,qBAAxB,IAC3BA,qBAD2B,GAG1BD,iBAAiB,GAAGC,qBAHvB;AAIAI,IAAAA,UAAU,CAACR,QAAD,EAAWK,oBAAoB,GAAGd,IAAI,CAACD,GAAL,EAAlC,CAAV;AACD;;AAED,MAAID,SAAS,EAAb,EAAiB;AACfM,IAAAA,UAAU;AACX,GAFD,MAEO;AACLI,IAAAA,wBAAwB;AACzB;AACF;;AAED,SAAStB,GAAT,CAAcgC,EAAd,EAAkB;AAChBA,EAAAA,EAAE;AACH;;AAED,eAAe1B,aAAf,GAAgC;AAC9B,SAAO,MAAM2B,SAAS,CAACC,MAAV,CAAiB;AAC5BC,IAAAA,QAAQ,EAAE,KADkB;AAE5BC,IAAAA,eAAe,EAAE;AACfC,MAAAA,KAAK,EAAE,IADQ;AAEfC,MAAAA,MAAM,EAAE;AAFO;AAFW,GAAjB,CAAb;AAOD","sourcesContent":["import puppeteer from 'puppeteer'\nimport { contactData } from './config.js'\nimport { getFlatOfferFetchers, process, verifyContactData } from './core.js'\n\nconst intervalBetweenProcessRuns = 60000\n\nrun(main)\n\nasync function main () {\n  verifyContactData(contactData)\n  const flatOfferFetchers = await getFlatOfferFetchers()\n\n  let browserPromise\n\n  function getBrowser () {\n    if (!browserPromise) {\n      browserPromise = createBrowser()\n      browserPromise.then(browser => {\n        browser.on('disconnect', () => {\n          browserPromise = null\n        })\n      })\n\n    }\n    return browserPromise\n  }\n\n  // In UTC\n  const runFromHour = 6\n  const runToHour = 20\n\n  function shouldRun () {\n    const now = new Date()\n    const currentUTCHour = now.getUTCHours()\n    return (runFromHour <= currentUTCHour && currentUTCHour <= runToHour)\n  }\n\n  function shouldStop () {\n    return !shouldRun()\n  }\n\n  async function runProcess () {\n    console.log('Starting.')\n    await process(\n      getBrowser,\n      flatOfferFetchers,\n      { intervalBetweenProcessRuns, contactData, shouldStop },\n    )\n    onProcessStop(scheduleNextProcessStart)\n  }\n\n  function onProcessStop (callback) {\n    timerForHour(runToHour, () => {\n      console.log('Stopping.')\n      callback()\n    })\n  }\n\n  function scheduleNextProcessStart () {\n    console.log('Scheduling next process start.')\n    timerForHour(runFromHour, runProcess)\n  }\n\n  function timerForHour (hour, callback) {\n    let hoursUntilTimeout\n    const now = new Date()\n    const currentUTCHour = now.getUTCHours()\n    if (currentUTCHour < hour) {\n      hoursUntilTimeout = hour - currentUTCHour\n    } else {\n      hoursUntilTimeout = 24 - currentUTCHour + hour\n    }\n    const oneHourInMilliseconds = 1 * 60 * 60 * 1000\n    const nextProcessStartTime = Math.floor(Date.now() / oneHourInMilliseconds) *\n      oneHourInMilliseconds\n      +\n      (hoursUntilTimeout * oneHourInMilliseconds)\n    setTimeout(callback, nextProcessStartTime - Date.now())\n  }\n\n  if (shouldRun()) {\n    runProcess()\n  } else {\n    scheduleNextProcessStart()\n  }\n}\n\nfunction run (fn) {\n  fn()\n}\n\nasync function createBrowser () {\n  return await puppeteer.launch({\n    headless: false,\n    defaultViewport: {\n      width: 1024,\n      height: 768,\n    },\n  })\n}\n"],"file":"index.js"}